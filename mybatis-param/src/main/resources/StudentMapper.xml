<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="jp.tokyo.leon.mybatis.param.mapper.StudentMapper">

<!--    List<Student> selectById(Long id);-->
<!--    List<Student> selectByName(String name);-->
<!--    List<Student> selectByBirth(Date birth);-->
<!--    List<Student> selectBySex(Character sex);-->

    <!--
        parameterType的作用：
            告诉Mybatis框架，我这个参数的类型是什么类型。
            mybatis自身带有类型自动推断，大部分情况是可以省略不写的
            SQL语句最终是这样的：
                select * from t_student where id = ？
            JDBC代码是一定要给?传值的
            怎么传值？ps.setXXX(第几个问号，传什么值)
            ps.setLong();
            ps.setString();

            调用哪个set根据参数的类型决定


        注意：mybatis内置了很多别名
    -->
    <select id="selectById" resultType="Student" parameterType="long">
        select * from t_student where id = #{id}
    </select>

    <select id="selectByName" resultType="Student" parameterType="string">
        select * from t_student where name = #{name, javaType=String, jdbcType=VARCHAR}
    </select>

    <select id="selectByBirth" resultType="Student" parameterType="date">
        select * from t_student where birth = #{birth, javaType=Date, jdbcType=DATE}
    </select>

    <!--
        parameterType 类型指定是错的，但是下面 javaType=char, jdbcType=CHAR 是对的，依然不会报错。
        就是说下面的优先级高，如果下面没有指定，上面指定错了会报错，如下的样子不会报错
     -->
    <select id="selectBySex" resultType="Student" parameterType="string">
        select * from t_student where sex = #{sex, javaType=char, jdbcType=CHAR}
    </select>

    <insert id="insertStudentByMap" parameterType="map">
        insert into t_student(id, name, age, sex, birth, height)
        values (null, #{姓名}, #{年龄}, #{性别},#{生日}, #{身高})
    </insert>

    <insert id="insertStudentByEntity" parameterType="student">
        insert into t_student(id, name, age, sex, birth, height)
        values (null, #{name}, #{age}, #{sex},#{birth}, #{height})
    </insert>


    <select id="selectByNameAndSex" resultType="Student">
        select * from t_student where name = #{name, jdbcType=VARCHAR} and sex = #{sex, javaType=char, jdbcType=CHAR}
    </select>

</mapper>